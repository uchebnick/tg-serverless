apiVersion: apps/v1
kind: Deployment
metadata:
  name: tg-gateway
  namespace: telegram-serverless
  labels:
    app: tg-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tg-gateway
  template:
    metadata:
      labels:
        app: tg-gateway
    spec:
      containers:
      - name: tg-gateway
        image: tg_gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        - name: metrics
          containerPort: 9090
        env:
        - name: PORT
          value: "8080"
        - name: KAFKA_BROKERS
          value: "kafka-service:9092"
        - name: REDIS_ADDR
          value: "redis-service:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
              optional: true
        - name: REDIS_DB
          value: "0"
        - name: TELEGRAM_API_URL
          value: "https://api.telegram.org"
        - name: METRICS_PORT
          value: "9090"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: tg-gateway
  namespace: telegram-serverless
  labels:
    app: tg-gateway
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: tg-gateway
